user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 768;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 预设漏洞：详细的错误信息
    server_tokens on;
    
    # 日志配置
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # API网关服务器配置
    server {
        listen 80;
        listen 443 ssl;
        server_name api.company.local;
        
        # 预设漏洞：弱SSL配置
        ssl_certificate /etc/nginx/ssl/api.crt;
        ssl_certificate_key /etc/nginx/ssl/api.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;  # 漏洞：包含弱协议
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256';
        
        # 预设漏洞：允许所有来源的CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key' always;
        
        # 预设漏洞：暴露服务器信息
        add_header 'X-Server-Info' 'API-Gateway-v1.0' always;
        add_header 'X-Backend-Server' 'nginx/1.18.0' always;
        
        # 根路径
        location / {
            proxy_pass http://127.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 预设漏洞：不限制请求大小
            client_max_body_size 0;
        }
        
        # API代理路径
        location /api/ {
            proxy_pass http://127.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # 预设漏洞：不验证请求头
            proxy_pass_request_headers on;
        }
        
        # 管理接口 - 预设漏洞：无访问控制
        location /admin/ {
            proxy_pass http://127.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # 漏洞：管理接口无IP限制
            # allow 192.168.1.0/24;
            # deny all;
        }
        
        # 调试接口 - 预设漏洞：生产环境开启
        location /debug {
            proxy_pass http://127.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # 静态文件服务 - 预设漏洞：目录遍历
        location /static/ {
            alias /var/api/static/;
            autoindex on;  # 漏洞：开启目录浏览
        }
        
        # 配置文件访问 - 预设漏洞：配置文件可访问
        location /config/ {
            alias /var/api/config/;
            autoindex on;
        }
        
        # 日志文件访问 - 预设漏洞：日志文件可访问
        location /logs/ {
            alias /var/api/logs/;
            autoindex on;
        }
        
        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
    
    # 预设漏洞：HTTP服务器状态页面
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            # 漏洞：状态页面无访问控制
        }
        
        location /server-info {
            return 200 "Server: API Gateway\nVersion: 1.0.0\nNginx: $nginx_version\nUptime: $msec\n";
            add_header Content-Type text/plain;
        }
    }
}
